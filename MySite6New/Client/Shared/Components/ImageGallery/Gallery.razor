<div class="d-flex flex-column align-items-center">

    <div style="@galleryStyle">
        <img src="@imgUrl" />
    </div>

    <div>
        @foreach (var item in ListaImmagini!)
        {
            decimal ratio = Math.Round(((decimal)item.Width / (decimal)item.Height), 1);
            if(ratio==(decimal)1.5)
            {
                string idImg = $"img-{item.Id}";

                @if(firstThumb)
                {
                    <input type="radio" name="selector" checked="checked" id="@idImg" style="opacity: 0;" @onchange="() => ClickSelector(item)"/>
                    <label for="@idImg" style="@thumbStyleSelected">
                        <img src="@item.Url" alt="" />
                    </label>

                    firstThumb = false;
                }
                else
                {
                    <input type="radio" name="selector" id="@idImg" style="opacity: 0;" @onchange="() => ClickSelector(item)"/>
                    if(item==current)
                    {
                        <label for="@idImg" style="@thumbStyleSelected">
                            <img src="@item.Url" alt="" />
                        </label>
                    }
                    else
                    {
                        <label for="@idImg" style="@thumbStyleNormal">
                            <img src="@item.Url" alt="" />
                        </label>
                    }
                }
            }
        }
    </div>

</div>

@code {
    [Parameter] public ImageModel[]? ListaImmagini { get; set; }
    [Parameter] public int MaxImageWidth { get; set; } = 600;
    [Parameter] public int MaxImageHeight { get; set; } = 400;

    string galleryStyle = string.Empty;
    string imgUrl = string.Empty;
    string thumbStyleNormal = string.Empty;
    string thumbStyleSelected = string.Empty;
    bool firstThumb = true;
    ImageModel? current = null;

    private void ClickSelector(ImageModel item)
    {
        imgUrl = item.Url;
        current = item;
    }

    protected override void OnParametersSet()
    {
        if (ListaImmagini != null)
        {
            int paddingTop = Convert.ToInt32((double)MaxImageHeight / (double)MaxImageWidth * 100);
            int thumbWidth = MaxImageWidth * 25 / 100;

            galleryStyle = $"max-width: {MaxImageWidth}px;";
            thumbStyleNormal = $"max-width: {thumbWidth}px; object-fit:contain; padding-top: 6px; margin: 6px;";
            thumbStyleSelected = $"max-width: {thumbWidth}px; object-fit:contain; padding-top: 6px; margin: 6px; box-shadow: 0 0 0 3px #0be2f6;";
            ClickSelector(ListaImmagini[0]);
        }
    }

}
